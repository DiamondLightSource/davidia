name: Build and Publish storybook to GitHub Pages

on:
  push:
    branches:
      - "main"
jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.build-publish.outputs.page_url }}

    permissions:
      pages: write
      id-token: write

    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ["20.x"]
 
    steps:
    - uses: actions/checkout@v4

    - uses: pnpm/action-setup@v2
      with:
        version: 8
        run_install: |
          args: [ --force ]

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install server dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install ruff
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Generate OpenAPI JSON
      run: |
        python server/generate_openapi.py
        git config --global user.email "github-actions@github.com"
        git config --global user.name "GitHub Actions"
        git add server/openapi.json
        git commit -m "Add OpenAPI documentation"
        git push origin main

    - name: Set Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: pnpm

    - name: Build and publish
      id: build-publish
      uses: bitovi/github-actions-storybook-to-github-pages@v1.0.2
      with:
        checkout: false
        path: storybook/storybook-static
        install_command: echo Already done
        build_command: pnpm run docs && pnpm build:storybook

    - name: Deploy OpenAPI to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./server
